
package xyz.lzw.box;
/**
 * 游戏实现 客户端
 */
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
 
import javax.swing.*;
 
 
public class mainFrame extends JFrame implements ActionListener,ItemListener {
	JLabel lb;
	JLabel lb2;
	JButton renew1,last1,choose1,first1,over1,muc1,back1,next1;
	MainPanel panel;
	Sound sound;
	//菜单栏
	JComboBox jc = new JComboBox();
	MenuItem renew = new MenuItem("重新开始");
	MenuItem back = new MenuItem("悔一步");
	MenuItem last = new MenuItem("上一关");
	MenuItem next = new MenuItem("下一关");
	MenuItem choose = new MenuItem("选择关卡");
	MenuItem exit = new MenuItem("退出");
	MenuItem qin = new MenuItem("琴箫合奏");
	MenuItem guang = new MenuItem("BGM");
	MenuItem mid1 = new MenuItem("mid1");
	MenuItem mid2 = new MenuItem("mid2");
	MenuItem nor = new MenuItem("默认");
	MenuItem about = new MenuItem("关于此游戏");
	//构造函数,实现图形用户界面
	mainFrame(){
		super("Puppet制作 恶搞小游戏");
		setSize(720,720);
		setVisible(true);
		setResizable(false);  //设置窗体的大小不可随意改变
		setLocation(320,20);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//创建一个容器 并将JFrame窗体转换为容器
		Container conter = getContentPane();
		conter.setLayout(null);
		conter.setBackground(Color.BLACK);
		lb = new JLabel("推箱子~",SwingConstants.CENTER);
		lb2 = new JLabel("更换音乐",SwingConstants.CENTER);
		add(lb);
		add(lb2);
		lb.setBounds(100,20,400,20);
		lb.setForeground(Color.YELLOW);
		lb2.setBounds(625, 500, 55, 20);
		lb2.setForeground(Color.YELLOW);
		//按钮
		renew1 = new JButton("重玩");
		add(renew1);
		back1 = new JButton("悔一步");
		add(back1);
		last1 = new JButton("上一关");
		add(last1);
		next1 = new JButton("下一关");
		add(next1);
		choose1 = new JButton("选关");
		add(choose1);
		first1 = new JButton("第1关");
		add(first1);
		over1 = new JButton("最终关");
		add(over1);
		muc1 = new JButton("音乐关");
		add(muc1);
		renew1.setBounds(625, 100, 80, 40);
		renew1.addActionListener(this);
		
		back1.setBounds(625, 150, 80, 40);
		back1.addActionListener(this);
		
		first1.setBounds(625, 200, 80, 40);
		first1.addActionListener(this);
 
		last1.setBounds(625, 250, 80, 40);
		last1.addActionListener(this);
 
		next1.setBounds(625, 300, 80, 40);
		next1.addActionListener(this);
		
		choose1.setBounds(625, 350, 80, 40);
		choose1.addActionListener(this);
	
		over1.setBounds(625, 400, 80, 40);
		over1.addActionListener(this);
 
		muc1.setBounds(625, 450, 80, 40);
		muc1.addActionListener(this);
		//更换音乐里的下拉菜单标题
		jc.setBounds(625, 530, 80, 25);
		jc.addItem("默认");
		jc.addItem("琴箫合奏");
		jc.addItem("BGM");
		jc.addItem("经典");
		jc.addItem("流行");
		jc.addItemListener(this);
		conter.add(jc);
		//子菜单栏
		Menu choices = new Menu("选项");
		choices.add(renew);
		choices.add(last);
		choices.add(next);
		choices.add(choose);
		choices.add(back);
		choices.addSeparator();
		choices.add(exit);
		renew.addActionListener(this);
		last.addActionListener(this);
		next.addActionListener(this);
		choose.addActionListener(this);
		back.addActionListener(this);
		exit.addActionListener(this);
		//子菜单栏
		Menu setmusic = new Menu("设置音乐");
		setmusic.add(nor);
		setmusic.add(qin);
		setmusic.add(guang);
		setmusic.add(mid1);
		setmusic.add(mid2);
		nor.addActionListener(this);
		qin.addActionListener(this);
		guang.addActionListener(this);
		mid1.addActionListener(this);
		mid2.addActionListener(this);
		Menu help = new Menu("帮助");
		help.add(about);
		about.addActionListener(this);
		//菜单
		MenuBar bar = new MenuBar();
		bar.add(choices);
		bar.add(setmusic);
		bar.add(help);
		setMenuBar(bar);
		nor.setEnabled(false);
		
		sound = new Sound();
		sound.loadSound();
		panel = new MainPanel();
		add(panel);
		panel.PutBox(panel.level);
		panel.requestFocus();
		validate();
	}
	//返回画板上按钮的监听，来看用户点下了什么按钮，同时进行不同操作
	@Override
	public void actionPerformed(ActionEvent e) {
		//重玩
		if(e.getSource()==renew1||e.getSource()==renew) {
			panel.PutBox(panel.level);
			panel.requestFocus();
			panel.remove();
		}
		//上一关
		else if(e.getSource()==last||e.getSource()==last1) {
			panel.level--;
			//判断是否为第一关 从而执行不同操作
			if(panel.level<1) {
				panel.level++;
			JOptionPane.showMessageDialog(this, "本关是是第一关，无法继续返回上一关卡");
			panel.requestFocus();
			}
			else {
				panel.PutBox(panel.level);
				panel.requestFocus();
			}
			panel.remove();
		}
		//下一关
		else if(e.getSource()==next||e.getSource()==next1) {
			panel.level++;
			//判断是否是最后一关 从而进行不同操作
			if(panel.level>panel.maxlevel()) {
				panel.level--;
				JOptionPane.showMessageDialog(this, "本关已经是最后一关 无法进入下一关");
				panel.requestFocus();
			}
			else {
				panel.PutBox(panel.level);
				panel.requestFocus();
			}
			panel.remove();
		}
		//最终关
		else if(e.getSource()==over1) {
			panel.level=panel.maxlevel();
			panel.PutBox(panel.level);
			panel.requestFocus();
			panel.remove();
		}
		//退出 结束游戏
		else if(e.getSource()==exit) {
			System.exit(0);
		}
		//帮助
		else if(e.getSource()==about) {
			JOptionPane.showMessageDialog(this, "PUPPET制作 非完善版");
		}
		//选关
		else if(e.getSource()==choose||e.getSource()==choose1) {
			String tmpp = JOptionPane.showInputDialog(this,"请输入您要跳转到的关卡号:(1~50)");
			panel.level=Integer.parseInt(tmpp);
			panel.remove();
			if(panel.level>panel.maxlevel()||panel.level<1) {
				JOptionPane.showMessageDialog(this, "不存在该关卡!!!!");
				panel.requestFocus();
			}
			else {
				panel.PutBox(panel.level);
				panel.requestFocus();
			}
		}
		//第一关
		else if(e.getSource()==first1) {
			panel.level=1;
			panel.PutBox(panel.level);
			panel.requestFocus();
			panel.remove();
		}
		//音乐开/关
		else if(e.getSource()==muc1) {
			if(sound.isplay()) {
				sound.mystop();
				muc1.setLabel("音乐开");
			}
			else {
				sound.loadSound();
				muc1.setLabel("音乐关");
			}
			panel.requestFocus();
		}
		//上一步
		else if(e.getSource()==back1||e.getSource()==back) {
			if(panel.isMystackEmpty()) {
				JOptionPane.showMessageDialog(this, "你还未进行移动，无法返回上一步~~~");
			}
			else {
				switch(panel.back()) {
				case 10:panel.backup(10);break;
				case 11:panel.backup(11);break;
				case 20:panel.backdown(20);break;
				case 21:panel.backdown(21);break;
				case 30:panel.backleft(30);break;
				case 31:panel.backleft(31);break;
				case 40:panel.backright(40);break;
				case 41:panel.backright(41);break;
				}
			}
			panel.requestFocus();
		}
		//音乐下拉菜单里的默认音乐
		else if(e.getSource()==nor) {
			jc.setSelectedIndex(0);
		}
		//音乐下拉菜单里的琴箫合奏音乐
		else if(e.getSource()==qin) {
			jc.setSelectedIndex(1);
		}
		//音乐下拉菜单里的灌篮高手音乐
		else if(e.getSource()==guang) {
			jc.setSelectedIndex(2);
		}
		//音乐下拉菜单里的经典音乐
		else if(e.getSource()==mid1) {
			jc.setSelectedIndex(3);
		}
		//音乐下拉菜单里的流行音乐
		else if(e.getSource()==mid2) {
			jc.setSelectedIndex(4);
		}
	}
	//更换音乐
	@Override
	public void itemStateChanged(ItemEvent ie) {
		int numm = jc.getSelectedIndex();
		switch(numm) {
			case 0:
				sound.setMusic("nor.mid");
				if(sound.isplay()) {
					sound.mystop();
				}
				sound.loadSound();
				muc1.setLabel("音乐关");
				nor.setEnabled(false);
				qin.setEnabled(true);
				guang.setEnabled(true);
				mid1.setEnabled(true);
				mid2.setEnabled(true);
				panel.requestFocus();
				break;
			case 1: 
				sound.setMusic("qin.mid");
				if(sound.isplay()) {
					sound.mystop();
				}
				sound.loadSound();
				muc1.setLabel("音乐关");
				nor.setEnabled(true);
				qin.setEnabled(false);
				guang.setEnabled(true);
				mid1.setEnabled(true);
				mid2.setEnabled(true);
				panel.requestFocus();
				break;
			case 2: 
				sound.setMusic("guang.mid");
				if(sound.isplay()) {
					sound.mystop();
				}
				sound.loadSound();
				muc1.setLabel("音乐关");
				nor.setEnabled(true);
				qin.setEnabled(true);
				guang.setEnabled(false);
				mid1.setEnabled(true);
				mid2.setEnabled(true);
				panel.requestFocus();
				break;
			case 3: 
				sound.setMusic("mid1.mid");
				if(sound.isplay()) {
					sound.mystop();
				}
				sound.loadSound();
				muc1.setLabel("音乐关");
				nor.setEnabled(true);
				qin.setEnabled(true);
				guang.setEnabled(true);
				mid1.setEnabled(false);
				mid2.setEnabled(true);
				panel.requestFocus();
				break;
			case 4: 
				sound.setMusic("mid2.mid");
				if(sound.isplay()) {
					sound.mystop();
				}
				sound.loadSound();
				muc1.setLabel("音乐关");
				nor.setEnabled(true);
				qin.setEnabled(true);
				guang.setEnabled(true);
				mid1.setEnabled(true);
				mid2.setEnabled(false);
				panel.requestFocus();
				break;
		}
	}
}
之后是画板类的代码（也就是俗称的画地图的东西）: